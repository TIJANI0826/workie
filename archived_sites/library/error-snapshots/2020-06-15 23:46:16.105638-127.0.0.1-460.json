{
 "etype": "OperationalError",
 "evalue": "OperationalError(2003, \"Can't connect to MySQL server on 'library' ([Errno -3] Temporary failure in name resolution)\")",
 "exception": {
  "args": [
   40,
   50,
   48,
   48,
   51,
   44,
   32,
   34,
   67,
   97,
   110,
   39,
   116,
   32,
   99,
   111,
   110,
   110,
   101,
   99,
   116,
   32,
   116,
   111,
   32,
   77,
   121,
   83,
   81,
   76,
   32,
   115,
   101,
   114,
   118,
   101,
   114,
   32,
   111,
   110,
   32,
   39,
   108,
   105,
   98,
   114,
   97,
   114,
   121,
   39,
   32,
   40,
   91,
   69,
   114,
   114,
   110,
   111,
   32,
   45,
   51,
   93,
   32,
   84,
   101,
   109,
   112,
   111,
   114,
   97,
   114,
   121,
   32,
   102,
   97,
   105,
   108,
   117,
   114,
   101,
   32,
   105,
   110,
   32,
   110,
   97,
   109,
   101,
   32,
   114,
   101,
   115,
   111,
   108,
   117,
   116,
   105,
   111,
   110,
   41,
   34,
   41
  ],
  "original_exception": [
   103,
   97,
   105,
   101,
   114,
   114,
   111,
   114,
   40,
   45,
   51,
   44,
   32,
   39,
   84,
   101,
   109,
   112,
   111,
   114,
   97,
   114,
   121,
   32,
   102,
   97,
   105,
   108,
   117,
   114,
   101,
   32,
   105,
   110,
   32,
   110,
   97,
   109,
   101,
   32,
   114,
   101,
   115,
   111,
   108,
   117,
   116,
   105,
   111,
   110,
   39,
   41
  ],
  "traceback": [
   39,
   84,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   40,
   109,
   111,
   115,
   116,
   32,
   114,
   101,
   99,
   101,
   110,
   116,
   32,
   99,
   97,
   108,
   108,
   32,
   108,
   97,
   115,
   116,
   41,
   58,
   92,
   110,
   32,
   32,
   70,
   105,
   108,
   101,
   32,
   34,
   47,
   104,
   111,
   109,
   101,
   46,
   46,
   46,
   32,
   91,
   69,
   114,
   114,
   110,
   111,
   32,
   45,
   51,
   93,
   32,
   84,
   101,
   109,
   112,
   111,
   114,
   97,
   114,
   121,
   32,
   102,
   97,
   105,
   108,
   117,
   114,
   101,
   32,
   105,
   110,
   32,
   110,
   97,
   109,
   101,
   32,
   114,
   101,
   115,
   111,
   108,
   117,
   116,
   105,
   111,
   110,
   92,
   110,
   39
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   79,
   112,
   101,
   114,
   97,
   116,
   105,
   111,
   110,
   97,
   108,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'http://workie:8000/' [GET]>)",
   "dump": {
    "global init_request": "<function init_request>",
    "request": "<Request 'http://workie:8000/' [GET]>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "52": "\t\trollback = True",
    "53": "",
    "54": "\t\tinit_request(request)",
    "55": "",
    "56": "\t\tfrappe.recorder.record()"
   },
   "lnum": 54
  },
  {
   "call": "(request=<Request 'http://workie:8000/' [GET]>)",
   "dump": {
    "frappe. auth": "<module 'frappe.auth' from '/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py'>",
    "frappe. local": "<werkzeug.local.Local object>",
    "frappe.auth. HTTPRequest": "<class 'frappe.auth.HTTPRequest'>",
    "frappe.local.http_request": "undefined",
    "global frappe": "<module 'frappe' from '/home/ibrahim/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/app.py",
   "func": "init_request",
   "lines": {
    "134": "\tmake_form_dict(request)",
    "135": "",
    "136": "\tfrappe.local.http_request = frappe.auth.HTTPRequest()",
    "137": "",
    "138": "def make_form_dict(request):"
   },
   "lnum": 136
  },
  {
   "call": "(self=<frappe.auth.HTTPRequest object>)",
   "dump": {
    "frappe. local": "<werkzeug.local.Local object>",
    "frappe.local.login_manager": "undefined",
    "global LoginManager": "<class 'frappe.auth.LoginManager'>",
    "global frappe": "<module 'frappe' from '/home/ibrahim/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py",
   "func": "__init__",
   "lines": {
    "49": "",
    "50": "\t\t# login",
    "51": "\t\tfrappe.local.login_manager = LoginManager()",
    "52": "",
    "53": "\t\tif frappe.form_dict._lang:"
   },
   "lnum": 51
  },
  {
   "call": "(self=<frappe.auth.LoginManager object>)",
   "dump": {
    "self": "<frappe.auth.LoginManager object>",
    "self. get_user_info": "<bound method LoginManager.get_user_info of <frappe.auth.LoginManager object>>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py",
   "func": "__init__",
   "lines": {
    "112": "\t\t\t\tself.resume = True",
    "113": "\t\t\t\tself.make_session(resume=True)",
    "114": "\t\t\t\tself.get_user_info()",
    "115": "\t\t\t\tself.set_user_info(resume=True)",
    "116": "\t\t\texcept AttributeError:"
   },
   "lnum": 114
  },
  {
   "call": "(self=<frappe.auth.LoginManager object>, resume=False)",
   "dump": {
    "as_dict": "undefined",
    "frappe. db": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "frappe.db. get_value": "<bound method Database.get_value of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "global frappe": "<module 'frappe' from '/home/ibrahim/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "self": "<frappe.auth.LoginManager object>",
    "self. info": "None",
    "self. user": "'Guest'"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py",
   "func": "get_user_info",
   "lines": {
    "147": "",
    "148": "\tdef get_user_info(self, resume=False):",
    "149": "\t\tself.info = frappe.db.get_value(\"User\", self.user,",
    "150": "\t\t\t[\"user_type\", \"first_name\", \"last_name\", \"user_image\"], as_dict=1)",
    "151": ""
   },
   "lnum": 149
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, doctype='User', filters='Guest', fieldname=['user_type', 'first_name', 'last_name', 'user_image'], ignore=None, as_dict=1, debug=False, order_by=None, cache=False)",
   "dump": {
    "as_dict": "1",
    "cache": "False",
    "debug": "False",
    "doctype": "'User'",
    "fieldname": "['user_type', 'first_name', 'last_name', 'user_image']",
    "filters": "'Guest'",
    "ignore": "None",
    "order_by": "None",
    "ret": "undefined",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. get_values": "<bound method Database.get_values of <frappe.database.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "get_value",
   "lines": {
    "405": "\t\t\"\"\"",
    "406": "",
    "407": "\t\tret = self.get_values(doctype, filters, fieldname, ignore, as_dict, debug,",
    "408": "\t\t\torder_by, cache=cache)",
    "409": ""
   },
   "lnum": 407
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, doctype='User', filters='Guest', fieldname=['user_type', 'first_name', 'last_name', 'user_image'], ignore=None, as_dict=1, debug=False, order_by='modified desc', update=None, cache=False)",
   "dump": {
    "as_dict": "1",
    "debug": "False",
    "doctype": "'User'",
    "fields": "['user_type', 'first_name', 'last_name', 'user_image']",
    "filters": "'Guest'",
    "order_by": "'modified desc'",
    "out": "None",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _get_values_from_table": "<bound method Database._get_values_from_table of...atabase.mariadb.database.MariaDBDatabase object>>",
    "update": "None"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "get_values",
   "lines": {
    "450": "\t\t\tif (filters is not None) and (filters!=doctype or doctype==\"DocType\"):",
    "451": "\t\t\t\ttry:",
    "452": "\t\t\t\t\tout = self._get_values_from_table(fields, filters, doctype, as_dict, debug, order_by, update)",
    "453": "\t\t\t\texcept Exception as e:",
    "454": "\t\t\t\t\tif ignore and (frappe.db.is_missing_column(e) or frappe.db.is_table_missing(e)):"
   },
   "lnum": 452
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, fields=['user_type', 'first_name', 'last_name', 'user_image'], filters='Guest', doctype='User', as_dict=1, debug=False, order_by='order by modified desc', update=None)",
   "dump": {
    "\n.format": "undefined",
    "as_dict": "1",
    "conditions": "'`name` = %(name)s'",
    "debug": "False",
    "doctype": "'User'",
    "fl": "'`user_type`, `first_name`, `last_name`, `user_image`'",
    "order_by": "'order by modified desc'",
    "r": "undefined",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. sql": "<bound method Database.sql of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "update": "None",
    "values": "{'name': 'Guest'}"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "_get_values_from_table",
   "lines": {
    "595": "\t\torder_by = (\"order by \" + order_by) if order_by else \"\"",
    "596": "",
    "597": "\t\tr = self.sql(\"select {0} from `tab{1}` {2} {3} {4}\"",
    "598": "\t\t\t.format(fl, doctype, \"where\" if conditions else \"\", conditions, order_by), values,",
    "599": "\t\t\tas_dict=as_dict, debug=debug, update=update)"
   },
   "lnum": 597
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, query='select `user_type`, `first_name`, `last_name`, `...r` where `name` = %(name)s order by modified desc', values={'name': 'Guest'}, as_dict=1, as_list=0, formatted=0, debug=False, ignore_ddl=0, as_utf8=0, auto_commit=0, update=None, explain=False)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. connect": "<bound method Database.connect of <frappe.database.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "sql",
   "lines": {
    "120": "",
    "121": "\t\tif not self._conn:",
    "122": "\t\t\tself.connect()",
    "123": "",
    "124": "\t\t# in transaction validations"
   },
   "lnum": 122
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _conn": "None",
    "self. get_connection": "<bound method MariaDBDatabase.get_connection of ...atabase.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "connect",
   "lines": {
    "73": "\t\t\"\"\"Connects to a database as set in `site_config.json`.\"\"\"",
    "74": "\t\tself.cur_db_name = self.user",
    "75": "\t\tself._conn = self.get_connection()",
    "76": "\t\tself._cursor = self._conn.cursor()",
    "77": "\t\tfrappe.local.rollback_observers = []"
   },
   "lnum": 75
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "charset": "undefined",
    "conn": "undefined",
    "conv": "undefined",
    "frappe. conf": "{'auto_update': False, 'background_workers': 1, ...pQsH', 'db_type': 'mariadb', 'developer_mode': 1}",
    "frappe.conf. local_infile": "None",
    "global conversions": "{<class 'bool'>: <function escape_bool>, <class 'int'>: <function escape_int>, <class 'float'>: <function escape_float>, <class 'str'>: <function escape_unicode>, <class 'tuple'>: <function escape_sequence>, <class 'list'>: <function escape_sequence>, <class 'set'>: <function escape_sequence>, <class 'frozenset'>: <function escape_sequence>, <class 'dict'>: <function escape_dict>, <class 'NoneType'>: <function escape_None>, ...}",
    "global frappe": "<module 'frappe' from '/home/ibrahim/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "global pymysql": "<module 'pymysql' from '/home/ibrahim/frappe-ben...lib/python3.8/site-packages/pymysql/__init__.py'>",
    "local_infile": "undefined",
    "port": "undefined",
    "pymysql. connect": "<function Connect>",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. host": "'library'",
    "self. password": "'H8hI9TlLgJVPpQsH'",
    "self. port": "''",
    "self. user": "'_00299a408dc3498a'",
    "use_unicode": "undefined"
   },
   "file": "/home/ibrahim/frappe-bench/apps/frappe/frappe/database/mariadb/database.py",
   "func": "get_connection",
   "lines": {
    "87": "\t\t\t\tconv = conversions, local_infile = frappe.conf.local_infile)",
    "88": "\t\telse:",
    "89": "\t\t\tconn = pymysql.connect(self.host, self.user or '', self.password or '',",
    "90": "\t\t\t\tport=self.port, charset='utf8mb4', use_unicode = True, conv = conversions,",
    "91": "\t\t\t\tlocal_infile = frappe.conf.local_infile)"
   },
   "lnum": 89
  },
  {
   "call": "(*args=('library', '_00299a408dc3498a', 'H8hI9TlLgJVPpQsH'), **kwargs={'charset': 'utf8mb4', 'conv': {<class 'bool'>: <function escape_bool>, <class 'int'>: <function escape_int>, <class 'float'>: <function escape_float>, <class 'str'>: <function escape_unicode>, <class 'tuple'>: <function escape_sequence>, <class 'list'>: <function escape_sequence>, <class 'set'>: <function escape_sequence>, <class 'frozenset'>: <function escape_sequence>, <class 'dict'>: <function escape_dict>, <class 'NoneType'>: <function escape_None>, ...}, 'local_infile': None, 'port': '', 'use_unicode': True})",
   "dump": {
    "Connection": "<class 'pymysql.connections.Connection'>",
    "args": "('library', '_00299a408dc3498a', 'H8hI9TlLgJVPpQsH')",
    "kwargs": "{'charset': 'utf8mb4', 'conv': {<class 'bool'>: <function escape_bool>, <class 'int'>: <function escape_int>, <class 'float'>: <function escape_float>, <class 'str'>: <function escape_unicode>, <class 'tuple'>: <function escape_sequence>, <class 'list'>: <function escape_sequence>, <class 'set'>: <function escape_sequence>, <class 'frozenset'>: <function escape_sequence>, <class 'dict'>: <function escape_dict>, <class 'NoneType'>: <function escape_None>, ...}, 'local_infile': None, 'port': '', 'use_unicode': True}"
   },
   "file": "/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/__init__.py",
   "func": "Connect",
   "lines": {
    "92": "    \"\"\"",
    "93": "    from .connections import Connection",
    "94": "    return Connection(*args, **kwargs)",
    "95": "",
    "96": "from . import connections as _orig_conn"
   },
   "lnum": 94
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, host='library', user='_00299a408dc3498a', password='H8hI9TlLgJVPpQsH', database=None, port='', unix_socket=None, charset='utf8mb4', sql_mode=None, read_default_file=None, conv={<class 'bool'>: <function escape_bool>, <class 'int'>: <function escape_int>, <class 'float'>: <function escape_float>, <class 'str'>: <function escape_unicode>, <class 'tuple'>: <function escape_sequence>, <class 'list'>: <function escape_sequence>, <class 'set'>: <function escape_sequence>, <class 'frozenset'>: <function escape_sequence>, <class 'dict'>: <function escape_dict>, <class 'NoneType'>: <function escape_None>, ...}, use_unicode=True, client_flag=3842565, cursorclass=<class 'pymysql.cursors.Cursor'>, init_command=None, connect_timeout=10, ssl=None, read_default_group=None, compress=None, named_pipe=None, autocommit=False, db=None, passwd=None, local_infile=None, max_allowed_packet=16777216, defer_connect=False, auth_plugin_map=None, read_timeout=None, write_timeout=None, bind_address=None, binary_prefix=False, program_name=None, server_public_key=None)",
   "dump": {
    "self": "<pymysql.connections.Connection object>",
    "self. connect": "<bound method Connection.connect of <pymysql.connections.Connection object>>"
   },
   "file": "/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/connections.py",
   "func": "__init__",
   "lines": {
    "323": "            self._sock = None",
    "324": "        else:",
    "325": "            self.connect()",
    "326": "",
    "327": "    def _create_ssl_ctx(self, sslp):"
   },
   "lnum": 325
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, sock=None)",
   "dump": {
    "exc": "OperationalError(2003, \"Can't connect to MySQL s...Errno -3] Temporary failure in name resolution)\")"
   },
   "file": "/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/connections.py",
   "func": "connect",
   "lines": {
    "628": "                exc.traceback = traceback.format_exc()",
    "629": "                if DEBUG: print(exc.traceback)",
    "630": "                raise exc",
    "631": "",
    "632": "            # If e is neither DatabaseError or IOError, It's a bug."
   },
   "lnum": 630
  }
 ],
 "locals": {
  "exc": "OperationalError(2003, \"Can't connect to MySQL s...Errno -3] Temporary failure in name resolution)\")",
  "kwargs": "{}",
  "self": "<pymysql.connections.Connection object>",
  "sock": "None"
 },
 "pyver": "Python 3.8.2: /home/ibrahim/frappe-bench/env/bin/python (prefix: /home/ibrahim/frappe-bench/env)",
 "timestamp": "2020-06-15 23:46:16.105748",
 "traceback": "Traceback (most recent call last):\n  File \"/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/connections.py\", line 581, in connect\n    sock = socket.create_connection(\n  File \"/usr/lib/python3.8/socket.py\", line 787, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File \"/usr/lib/python3.8/socket.py\", line 918, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno -3] Temporary failure in name resolution\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/app.py\", line 54, in application\n    init_request(request)\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/app.py\", line 136, in init_request\n    frappe.local.http_request = frappe.auth.HTTPRequest()\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py\", line 51, in __init__\n    frappe.local.login_manager = LoginManager()\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py\", line 114, in __init__\n    self.get_user_info()\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/auth.py\", line 149, in get_user_info\n    self.info = frappe.db.get_value(\"User\", self.user,\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py\", line 407, in get_value\n    ret = self.get_values(doctype, filters, fieldname, ignore, as_dict, debug,\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py\", line 452, in get_values\n    out = self._get_values_from_table(fields, filters, doctype, as_dict, debug, order_by, update)\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py\", line 597, in _get_values_from_table\n    r = self.sql(\"select {0} from `tab{1}` {2} {3} {4}\"\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py\", line 122, in sql\n    self.connect()\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/database/database.py\", line 75, in connect\n    self._conn = self.get_connection()\n  File \"/home/ibrahim/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 89, in get_connection\n    conn = pymysql.connect(self.host, self.user or '', self.password or '',\n  File \"/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/__init__.py\", line 94, in Connect\n    return Connection(*args, **kwargs)\n  File \"/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/connections.py\", line 325, in __init__\n    self.connect()\n  File \"/home/ibrahim/frappe-bench/env/lib/python3.8/site-packages/pymysql/connections.py\", line 630, in connect\n    raise exc\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on 'library' ([Errno -3] Temporary failure in name resolution)\")\n"
}